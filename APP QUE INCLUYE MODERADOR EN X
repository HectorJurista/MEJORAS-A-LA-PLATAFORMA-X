import React, { useState } from 'react';

export default function ModerationApp() {
  const [topics, setTopics] = useState([
    { id: 1, title: 'Topic 1: Investing Basics', interest: 'Mutual with Interest', status: 'Approved', content: 'Explanation of basic investment principles.' },
    { id: 2, title: 'Topic 2: Risks of High-Yield Bonds', interest: 'Mutual with Interest', status: 'Pending', content: 'Discussion about the potential downsides of high-yield bonds.' },
    { id: 3, title: 'Topic 3: Cryptocurrency - Future of Finance?', interest: 'Mutual with Interest, No Limits', status: 'Rejected', content: 'Debate on the role of cryptocurrency in the future of finance.' },
    { id: 4, title: 'Topic 4: Tax Implications of Investments', interest: 'Mutual with Interest', status: 'Approved', content: 'Guidance on understanding the tax implications of various investments.' },
    { id: 5, title: 'Topic 5: Ethical Investing and ESG Funds', interest: 'Mutual with Interest, No Limits', status: 'Pending', content: 'Exploration of ethical considerations in investing and ESG funds.' },
  ]);

  const handleStatusChange = (id: number, newStatus: string) => {
    setTopics(
      topics.map((topic) =>
        topic.id === id ? { ...topic, status: newStatus } : topic
      )
    );
  };

  const filteredTopics = topics.filter(topic => topic.interest === 'Mutual with Interest');
  const filteredTopicsNoLimits = topics.filter(topic => topic.interest === 'Mutual with Interest, No Limits');

  return (
    <div className="container mx-auto p-8">
      <h1 className="text-2xl font-bold mb-4">Moderation App</h1>

      <section className="mb-8">
        <h2 className="text-xl font-semibold mb-2">Mutual with Interest (Limited)</h2>
        <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4">
          {filteredTopics.map((topic) => (
            <div key={topic.id} className="bg-white rounded-lg shadow-md p-4">
              <h3 className="text-lg font-medium mb-2">{topic.title}</h3>
              <p className="text-gray-600 mb-2">{topic.content}</p>
              <div className="flex items-center justify-between">
                <span className="text-sm text-gray-500">Status: {topic.status}</span>
                <div className="space-x-2">
                  <button
                    onClick={() => handleStatusChange(topic.id, 'Approved')}
                    className="bg-green-500 hover:bg-green-700 text-white font-bold py-2 px-4 rounded disabled:opacity-50"
                    disabled={topic.status === 'Approved'}
                  >
                    Approve
                  </button>
                  <button
                    onClick={() => handleStatusChange(topic.id, 'Rejected')}
                    className="bg-red-500 hover:bg-red-700 text-white font-bold py-2 px-4 rounded disabled:opacity-50"
                    disabled={topic.status === 'Rejected'}
                  >
                    Reject
                  </button>
                  <button
                    onClick={() => handleStatusChange(topic.id, 'Pending')}
                    className="bg-yellow-500 hover:bg-yellow-700 text-white font-bold py-2 px-4 rounded disabled:opacity-50"
                    disabled={topic.status === 'Pending'}
                  >
                    Pending
                  </button>
                </div>
              </div>
            </div>
          ))}
        </div>
      </section>

      <section className="mb-8">
        <h2 className="text-xl font-semibold mb-2">Mutual with Interest (No Limits)</h2>
        <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4">
          {filteredTopicsNoLimits.map((topic) => (
            <div key={topic.id} className="bg-white rounded-lg shadow-md p-4">
              <h3 className="text-lg font-medium mb-2">{topic.title}</h3>
              <p className="text-gray-600 mb-2">{topic.content}</p>
              <div className="flex items-center justify-between">
                <span className="text-sm text-gray-500">Status: {topic.status}</span>
                <div className="space-x-2">
                  <button
                    onClick={() => handleStatusChange(topic.id, 'Approved')}
                    className="bg-green-500 hover:bg-green-700 text-white font-bold py-2 px-4 rounded disabled:opacity-50"
                    disabled={topic.status === 'Approved'}
                  >
                    Approve
                  </button>
                  <button
                    onClick={() => handleStatusChange(topic.id, 'Rejected')}
                    className="bg-red-500 hover:bg-red-700 text-white font-bold py-2 px-4 rounded disabled:opacity-50"
                    disabled={topic.status === 'Rejected'}
                  >
                    Reject
                  </button>
                  <button
                    onClick={() => handleStatusChange(topic.id, 'Pending')}
                    className="bg-yellow-500 hover:bg-yellow-700 text-white font-bold py-2 px-4 rounded disabled:opacity-50"
                    disabled={topic.status === 'Pending'}
                  >
                    Pending
                  </button>
                </div>
              </div>
            </div>
          ))}
        </div>
      </section>
    </div>
  );
}
